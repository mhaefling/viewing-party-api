---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/278/reviews
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - "<THEMOVIEDB_KEY>"
      User-Agent:
      - Faraday v2.10.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - openresty
      X-Memc:
      - HIT
      X-Memc-Key:
      - 708d6ca3028556815804014c4da2e6b8
      X-Memc-Age:
      - '16173'
      X-Memc-Expires:
      - '8603'
      Date:
      - Mon, 10 Feb 2025 01:35:36 GMT
      Cache-Control:
      - public, max-age=26251
      Etag:
      - W/"bb20d4dffc2fa98295139c87697074a1"
      Vary:
      - Origin
      - accept-encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 6b1026dc8b63f06fce4b4aec8b9a03d6.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - MvJRGnezeBerPlzAz2GOJF9DMWsR7R8a3_pWrn9PIWHujwWHQQyOdQ==
      Age:
      - '4604'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 10 Feb 2025 02:52:20 GMT
recorded_with: VCR 6.3.1
